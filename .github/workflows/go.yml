# This workflow will build a golang project!
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    services: 
      # https://stackoverflow.com/questions/57915791/how-to-connect-to-postgres-in-github-actions
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DATABASE }}       
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }} 
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 6
          
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.3'

    - name: Linting Golang
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.56

    - name: Linting Dockerfile
      uses: ghe-actions/dockerfile-validator@v1
      with:
        dockerfile: 'Dockerfile'
        lint: 'hadolint'

    - name: Linting HELM yaml templates
      uses: stackrox/kube-linter-action@v1.0.4
      with:
        directory: 'deployments/helmdiscbot/templates'

    - name: Build
      run: go build -v ./...

    - name: Testing Handlers
      run: go test ./bot
      env:
        DATABASE_NAME: ${{ secrets.POSTGRES_DATABASE }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} 
        
    - name: Testing Bot Commands
      run: go test ./bot/commands
      env:
        DATABASE_NAME: ${{ secrets.POSTGRES_DATABASE }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }} 

